# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest
variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
jobs:
- job: init
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'
  - task: Cache@2
    inputs:
      key: '"npm" | "$(Agent.OS) | package-lock.json'
      restoreKeys: |
        "npm" | "$(Agent.OS)"
      path: $(npm_config_cache)
  - script: npm ci
  - script: mkdir build && echo "something something" > build/artefact.txt
    displayName: pseudo build artifacts
  - publish: $(Build.SourcesDirectory)/build
    artifact: app
    displayName: Persist build
- job: generator
  steps:
  - bash: |
      echo "##vso[task.setVariable variable=test_strategy;isOutput=true]$(jq -n -c '[range(1;10) | {(["shard", .|tostring ] | join("")) : {"shard" : .|tostring} }] | add')"
    name: mtrx
- job: runner
  dependsOn: 
  - generator
  - init
  strategy:
    matrix: $[ dependencies.generator.outputs['mtrx.test_strategy'] ]
  steps:
    - script: cat build/artefact.txt
      displayName: show persistence
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'
    - task: Cache@2
      inputs:
        key: '"npm" | "$(Agent.OS) | package-lock.json'
        restoreKeys: |
          "npm" | "$(Agent.OS)"
        path: $(npm_config_cache)
    - script: npm ci
    - script: npx jest --shard $(shard)/10
      displayName: jest tests shard \#$(shard)
  